
用户身份与能力:
管理员UID为0：系统的管理员用户。
系统用户UID为1～999： Linux系统为了避免因某个服务程序出现漏洞而被黑客提权至整台服务器，默认服务程序会有独立的系统用户负责运行，进而有效控制被破坏范围。
普通用户UID从1000开始：是由管理员创建的用于日常工作的用户。

用户组：
通过使用用户组号码（GID，Group IDentification），我们可以把多个用户加入到同一个组中，从而方便为组中的用户统一规划权限或指定任务。
在Linux系统中创建每个用户时，将自动创建一个与其同名的基本用户组，而且这个基本用户组只有该用户一个人。如果该用户以后被归纳入其他用户组，则这个其他用户组称之为扩展用户组。一个用户只有一个基本用户组，但是可以有多个扩展用户组，从而满足日常的工作需要。

useradd命令：
命令格式 useradd 参数 用户名
参数
作用
-d
指定用户的家目录（默认为/home/username）
-e
账户的到期时间，格式为YYYY-MM-DD.
-u
指定该用户的默认UID
-g
指定一个初始的用户基本组（必须已存在）
-G
指定一个或多个扩展用户组
-N
不创建与用户同名的基本用户组
-s
指定该用户的默认Shell解释器

groupadd命令：
格式：groupadd 用户组名称

usermod命令：

格式：usermod 参数 用户名
-c
填写用户账户的备注信息
-d -m
参数-m与参数-d连用，可重新指定用户的家目录并自动把旧的数据转移过去
-e
账户的到期时间，格式为YYYY-MM-DD
-g
变更所属用户组
-G

变更扩展用户组
-L
锁定用户禁止其登录系统
-U
解锁用户，允许其登录系统
-s
变更默认终端
-u
修改用户的UID

passwd命令：
格式 passwd 参数 用户名
参数
作用
-l
 锁定用户，禁止其登录
-u
解除锁定，允许用户登录
--stdin
允许通过标准输入修改用户密码，如echo "NewPassWord" | passwd --stdin Username
-d
使该用户可用空密码登录系统
-e
强制用户在下次登录时修改密码
-S
显示用户的密码是否被锁定，以及密码所采用的加密算法名称

userdel命令：
格式 userdel 参数 用户名
参数
作用
-f
强制删除用户
-r
同时删除用户及用户家目录


文件权限与归属：
   -：普通文件。
    d：目录文件。
    l：链接文件。
    b：块设备文件。
      c：字符设备文件。
    p：管道文件。
    在Linux系统中，每个文件都有所属的所有者和所有组，并且规定了文件的所有者、所有组以及其他人对文件所拥有的可读（r）、可写（w）、可执行（x）等权限。
    对目录文件来说，“可读”表示能够读取目录内的文件列表；“可写”表示能够在目录内新增、删除、重命名文件；而“可执行”则表示能够进入该目录。
    文件的读、写、执行权限可以简写为rwx，亦可分别用数字4、2、1来表示 某个文件的权限为7则代表可读、可写、可执行（4+2+1）；若权限为6则代表可读、可写    （4+2）
    
    对目录文件来说，“可读”表示能够读取目录内的文件列表；“可写”表示能够在目录内新增、删除、重命名文件；而“可执行”则表示能够进入该目录
    
    文件的特殊权限：
    1 SUID  chmod u+s 文件
          SUID是一种对二进制程序进行设置的特殊权限，可以让二进制程序的执行者临时拥有属主的权限（仅对拥有执行权限的二进制程序有效）。例如，所有用户都可以执行passwd命令来修改自己的用户密码，而用户密码保存在/etc/shadow文件中。仔细查看这个文件就会发现它的默认权限是000，也就是说除了root管理员以外，所有用户都没有查看或编辑该文件的权限。但是，在使用passwd命令时如果加上SUID特殊权限位，就可让普通用户临时获得程序所有者的身份，把变更的密码信息写入到shadow文件中。  -rwsr-xr-x. 1 root root 27832 Jan 30  2014 /usr/bin/passwd 其中属主权限位最后一位为s，说明被设置了SUID
          
    2 SGID chmod g+s 文件
    两个功能：
    让执行者临时拥有属组的权限（对拥有执行权限的二进制程序进行设置）；
    在某个目录中创建的文件自动继承该目录的用户组（只可以对目录进行设置）
    
    chmod命令：用于设置文件的权限
    格式：chmod 权限参数(777...) 文件名 也可以加上特殊权限位 chmod 6345 net.txt>>>-wsr-Sr-x
    chown命令：设置文件或目录的所有者和所属组
    格式:chown 参数 所有者:所属组 文件或目录名
    
    注：二者在对目录进行操作时都需加上-R以进行递归操作
    
    3 SBIT
    SBIT特殊权限位可确保用户只能删除自己的文件，而不能删除其他用户的文件。换句话说，当对某个目录设置了SBIT粘滞位权限后，
    那么该目录中的文件就只能被其所有者执行删除操作了。
    可通过chmod -R o+t 目录名 给指定目录添加SBIT权限位
    
    总结：满权限位 7777 rwsrwsrwt  SUID为4 SGID为2 SBIT为1  -wsr-Sr-x>>>6345 7654>>>rwSr-sr-T 
    
    文件的隐藏属性:
    Linux系统中的文件除了具备一般权限和特殊权限之外，还有一种隐藏权限，即被隐藏起来的权限，默认情况下不能直接被用户发觉。
    1 chattr命令：
    格式：chattr (+或-)参数 文件 如果要添加某条属性则在参数前跟+号，如果要移除某项属性跟-号
    参数 作用
    i
    无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而不能新建或删除文件
    a
    仅允许补充（追加）内容，无法覆盖/删除内容（Append Only）
    S
    文件内容在变更后立即同步到硬盘（sync）
    s
    彻底从硬盘中删除，不可恢复（用0填充原文件所在硬盘区域）
    A
    不再修改这个文件或目录的最后访问时间（atime）
    b
    不再修改文件或目录的存取时间
    D
    检查压缩文件中的错误
    d
    使用dump命令备份时忽略本文件/目录
    c
    默认将文件或目录进行压缩
    u
    当删除该文件后依然保留其在硬盘中的数据，方便日后恢复
    t
    让文件系统支持尾部合并（tail-merging）
    x
    可以直接访问压缩文件中的内容
    
    
    
    2 lsattr命令：显示文件的隐藏属性

格式:lsattr 参数 文件
    
    文件访问控制表(ACL):
    对某个指定的用户进行单独的权限控制，就需要用到文件的访问控制列表（ACL）如果针对某个目录设置了ACL，则目录中的文件会继承其ACL；若针对文件设置了
    ACL，则文件不再继承其所在目录的ACL
     1 setfacl命令：用于管理文件的ACL规则 可以针对单一用户或用户组、单一文件或目录来进行读/写/执行权限的控制。
     格式:setfacl 参数 文件名    对目录文件用-R递归操作，针对普通文件用-m参数，移除ACL用-b参数
     [root@localhost my_temp]# setfacl -m u:downtiser:7 lol.txt 
     [root@localhost my_temp]# ls -l lol.txt 
     -rwxrwx---+ 1 root root 10 Jul 30 18:56 lol.txt 若使用ls -l 查看文件信息时第一个字段末尾为+号则说明该文件设置了ACL
     移除ACL时格式为:setfacl -b 文件名
     
     2 getfacl命令:用于显示指定文件或目录的ACL信息
     格式 getfacl 文件或目录名
     
     
    su命令与sudo服务:
    1 su命令可以在不同用户之间切换
    格式 su - user  如果加上-，将会完全切换到指定用户，包括环境变量和配置
    从普通用户切换到root用户需要输入密码
    
    2 sudo命令：将指定命令的执行权传递给指定用户
    限制用户执行指定的命令：
    记录用户执行的每一条命令；
    配置文件（/etc/sudoers）提供集中的用户管理、权限与主机等参数；
    验证密码的后5分钟内（默认值）无须再让用户再次验证密码。
    格式 sudo 参数 命令名称
    参数
    作用
    -h
    列出帮助信息
    -l
    列出当前用户可执行的命令
    -u 用户名或UID值
    以指定的用户身份执行命令
    -k
    清空密码的有效时间，下次执行sudo时需要再次进行密码验证
    -b
    在后台执行指定的命令
    -p
    更改询问密码的提示语
    
     visudo命令:配置用户权限
     格式 visudo
     在第99行以如下格式写上   谁可以使用  允许使用的主机=（以谁的身份）  可执行命令的列表
     downtiser    ALL=(root)     /usr/bin/cat  #root可以改成ALL， 命令一定要使用绝对路径，若root改为NOPASSWD则在sudo时就不必再输入密码
     

     
     
     
 
    
