    
1 vim 文本编辑器    
命令模式：控制光标移动，可对文本进行复制、粘贴、删除和查找等工作。
    
输入模式：正常的文本录入。

末行模式：保存或退出文档，以及设置编辑环境。

可以分别使用a、i、o三个键从命令模式切换到输入模式。其中，a键与i键分别是在光标后面一位和光标当前位置切换到输入模式，而o键则是在光标的下面再创建一个空行.

2 shell脚本
#!/bin/bash  #指明shell解释器
#my first shell
echo "The name of the shell is $0" # $0 指明该shell文件的文件名
echo "the amount of args is $#, their value are $*" # $# 返回在命令行中外部输入参数的个数, $* 返回所有参数的值
echo "the first arg is $1, the second is $2" # $1,$2等返回指定位置的参数的值
echo "Done!"

测试语句：
     格式>>>[ 条件表达式 ] 若条件表达式执行成功，返回0，否则返回非0
     文件测试：
     [ -d /etc/fstab ]
     操作符 	作用
     -d 	测试文件是否为目录类型
     -e 	测试文件是否存在
     -f 	判断是否为一般文件
     -r 	测试当前用户是否有权限读取
     -w 	测试当前用户是否有权限写入
     -x 	测试当前用户是否有权限执行

     逻辑判断：
     逻辑与：语句1 && 语句2 只有语句1执行成功才会执行语句2 [root@localhost layer1]# [ -w my_shell.sh ] && echo "writeable"
     逻辑或：语句1 || 语句2  只有语句1执行失败才会执行语句2  短路原则 [ -w my_shell.h ] || echo "unwriteable"
     逻辑非： ！语句1 将一个语句的逻辑值取反  [ ! -w my_shell.sh ] && echo "writeable"

     数字比较：
     [root@localhost layer1]# [ 15 -ge 22 ]
     操作符 	作用
    -eq 	是否等于
    -ne 	是否不等于
    -gt 	是否大于
    -lt 	是否小于
    -le 	是否等于或小于
    -ge 	是否大于或等于

     字符串比较：
     [root@localhost layer1]# [ "noob" = "noobs" ] [root@localhost layer1]# [ "noob" != "noobs" ]
     操作符 	作用
     = 	 比较字符串内容是否相同
     !=  比较字符串内容是否不同
     -z  判断字符串内容是否为空
 
流程控制语句:
     if语句：
     if 条件测试语句1
        then
            命令语句1
     elif 条件测试语句2
        then
            命令语句2
     else ....
        then
        ....
     fi
     
     
       
     
 
 





