标准输入重定向（STDIN，文件描述符为0）：默认从键盘输入，也可从其他文件或命令中输入。
标准输出重定向（STDOUT，文件描述符为1）：默认输出到屏幕。
错误输出重定向（STDERR，文件描述符为2）：默认输出到屏幕。

命令 < 文件
将文件作为命令的标准输入
命令 << 分界符
从标准输入中读入，直到遇见分界符才停止
命令 < 文件1 > 文件2
将文件1作为命令的标准输入并将标准输出到文件2
命令 > 文件
将标准输出重定向到一个文件中（清空原有文件的数据）
命令 2> 文件
将错误输出重定向到一个文件中（清空原有文件的数据）
命令 >> 文件
将标准输出重定向到一个文件中（追加到原有内容的后面）
命令 2>> 文件
将错误输出重定向到一个文件中（追加到原有内容的后面）
命令 >> 文件 2>&1 
或
命令 &>> 文件 
将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）
输入重定向的作用是把文件直接导入到命令中。

管道符 |:
把|前一个命令原本要输出到屏幕的标准正常数据当作是后一个命令的标准输入

通配符:
通配符就是通用的匹配信息的符号，比如星号（*）代表匹配零个或多个字符，问号（?）代表匹配单个字符，中括号内加上数字[0-9]代表匹配0～9之间的单个数字的字符，而中括号内加上字母[abc]则是代表匹配a、b、c三个字符中的任意一个字符

转义字符：
反斜杠（\）：使反斜杠后面的一个变量变为单纯的字符串。
[root@localhost layer1]# price=5
[root@localhost layer1]# echo "the price is \$$price"
the price is $5
单引号（''）：转义其中所有的变量为单纯的字符串。
[root@localhost layer1]# echo 'the price is \$$price'
the price is \$$price
双引号（""）：保留其中的变量属性，不进行转义处理。
反引号（``）：把其中的命令执行后返回结果。
[root@localhost layer1]# echo `man mail | wc -c`
144779

环境变量：
Linux系统中的环境变量是用来定义系统运行环境的一些参数，比如每个用户不同的家目录、邮件存放位置等
执行一条命令过程：
第1步：判断用户是否以绝对路径或相对路径的方式输入命令（如/bin/ls），如果是的话则直接执行。
第2步：Linux系统检查用户输入的命令是否为“别名命令”，即用一个自定义的命令名称来替换原本的命令名称。可以用alias命令来创建一个属于自己的命令别名，格式为“alias 别名=命令”。若要取消一个命令别名，则是用unalias命令，格式为“unalias 别名”
第3步：Bash解释器判断用户输入的是内部命令还是外部命令。内部命令是解释器内部的指令，会被直接执行；而用户在绝大部分时间输入的是外部命令，这些命令交由步骤4继续处理。可以使用“type命令名称”来判断用户输入的命令是内部命令还是外部命令。
第4步：系统在多个路径中查找用户输入的命令文件，而定义这些路径的变量叫作PATH，可以简单地把它理解成是“解释器的小助手”，作用是告诉Bash解释器待执行的命令可能存放的位置，然后Bash解释器就会乖乖地在这些位置中逐个查找。PATH是由多个路径值组成的变量，每个路径值之间用冒号间隔，对这些路径的增加和删除操作将影响到Bash解释器对Linux命令的查找。
重要环境变量名称
作用
HOME
用户的主目录（即家目录）
SHELL
用户在使用的Shell解释器名称
HISTSIZE
输出的历史命令记录条数
HISTFILESIZE
保存的历史命令记录条数
MAIL
邮件保存路径
LANG
系统语言、语系名称
RANDOM
生成一个随机数字
PS1
Bash解释器的提示符
PATH
定义解释器搜索用户执行命令的路径
EDITOR
用户默认的文本编辑器

可以自己创建变量 如 N=1
可以用export命令将一个变量提升为全局变量,可以被其他用户调用
export N
